(() => {
  const e = {
    890: (e, n, r) => { r.d(n, { Z: () => d }); const t = r(645); const o = r.n(t); const a = r(667); const s = r.n(a); const c = r(127); const i = o()(((e) => e[1])); const l = s()(c); i.push([e.id, `/* General */\r\n\r\n@font-face {\r\n  font-family: 'roboto';\r\n  src: url(${l}) format('ttf');\r\n  font-weight: 600;\r\n  font-style: normal;\r\n}\r\n\r\nbody {\r\n  background-color: #f0f1f1;\r\n}\r\n\r\n.font-bold {\r\n  font-weight: bolder;\r\n}\r\n\r\n/* Main */\r\n\r\n.main-title {\r\n  font-size: 4rem;\r\n}\r\n\r\n.bordered-button {\r\n  background-color: white;\r\n  color: black;\r\n  border-radius: 0;\r\n  text-align: center;\r\n  box-shadow: 2px 1px black;\r\n  font-weight: 500;\r\n  padding: 5px 10px;\r\n}\r\n\r\n/* ScoreList */\r\n\r\n#list,\r\n.form-control {\r\n  border: solid 2px black;\r\n}\r\n\r\n#list,\r\nli {\r\n  border-radius: 5px;\r\n}\r\n\r\nli:nth-child(1n) {\r\n  background-color: #ddd;\r\n}\r\n\r\nli:nth-child(2n) {\r\n  background-color: #fff;\r\n}\r\n\r\n#list li {\r\n  color: black;\r\n  padding: 5px 10px;\r\n}\r\n\r\n/* Form */\r\n\r\n.form-control::placeholder {\r\n  color: black;\r\n  font-weight: bolder;\r\n}\r\n`, '']); const d = i; }, 645: (e) => { e.exports = function (e) { const n = []; return n.toString = function () { return this.map(((n) => { const r = e(n); return n[2] ? '@media '.concat(n[2], ' {').concat(r, '}') : r; })).join(''); }, n.i = function (e, r, t) { typeof e === 'string' && (e = [[null, e, '']]); const o = {}; if (t) for (let a = 0; a < this.length; a++) { const s = this[a][0]; s != null && (o[s] = !0); } for (let c = 0; c < e.length; c++) { const i = [].concat(e[c]); t && o[i[0]] || (r && (i[2] ? i[2] = ''.concat(r, ' and ').concat(i[2]) : i[2] = r), n.push(i)); } }, n; }; }, 667: (e) => { e.exports = function (e, n) { return n || (n = {}), typeof (e = e && e.__esModule ? e.default : e) !== 'string' ? e : (/^['"].*['"]$/.test(e) && (e = e.slice(1, -1)), n.hash && (e += n.hash), /["'() \t\n]/.test(e) || n.needQuotes ? '"'.concat(e.replace(/"/g, '\\"').replace(/\n/g, '\\n'), '"') : e); }; }, 379: (e) => { const n = []; function r(e) { for (var r = -1, t = 0; t < n.length; t++) if (n[t].identifier === e) { r = t; break; } return r; } function t(e, t) { for (var a = {}, s = [], c = 0; c < e.length; c++) { const i = e[c]; const l = t.base ? i[0] + t.base : i[0]; const d = a[l] || 0; const u = ''.concat(l, ' ').concat(d); a[l] = d + 1; const f = r(u); const p = { css: i[1], media: i[2], sourceMap: i[3] }; f !== -1 ? (n[f].references++, n[f].updater(p)) : n.push({ identifier: u, updater: o(p, t), references: 1 }), s.push(u); } return s; } function o(e, n) { const r = n.domAPI(n); return r.update(e), function (n) { if (n) { if (n.css === e.css && n.media === e.media && n.sourceMap === e.sourceMap) return; r.update(e = n); } else r.remove(); }; }e.exports = function (e, o) { let a = t(e = e || [], o = o || {}); return function (e) { e = e || []; for (let s = 0; s < a.length; s++) { const c = r(a[s]); n[c].references--; } for (var i = t(e, o), l = 0; l < a.length; l++) { const d = r(a[l]); n[d].references === 0 && (n[d].updater(), n.splice(d, 1)); }a = i; }; }; }, 569: (e) => { const n = {}; e.exports = function (e, r) { const t = (function (e) { if (void 0 === n[e]) { let r = document.querySelector(e); if (window.HTMLIFrameElement && r instanceof window.HTMLIFrameElement) try { r = r.contentDocument.head; } catch (e) { r = null; }n[e] = r; } return n[e]; }(e)); if (!t) throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid."); t.appendChild(r); }; }, 216: (e) => { e.exports = function (e) { const n = document.createElement('style'); return e.setAttributes(n, e.attributes), e.insert(n), n; }; }, 565: (e, n, r) => { e.exports = function (e) { const n = r.nc; n && e.setAttribute('nonce', n); }; }, 795: (e) => { e.exports = function (e) { const n = e.insertStyleElement(e); return { update(r) { !(function (e, n, r) { let t = r.css; const o = r.media; const a = r.sourceMap; o ? e.setAttribute('media', o) : e.removeAttribute('media'), a && typeof btoa !== 'undefined' && (t += '\n/*# sourceMappingURL=data:application/json;base64,'.concat(btoa(unescape(encodeURIComponent(JSON.stringify(a)))), ' */')), n.styleTagTransform(t, e); }(n, e, r)); }, remove() { !(function (e) { if (e.parentNode === null) return !1; e.parentNode.removeChild(e); }(n)); } }; }; }, 589: (e) => { e.exports = function (e, n) { if (n.styleSheet)n.styleSheet.cssText = e; else { for (;n.firstChild;)n.removeChild(n.firstChild); n.appendChild(document.createTextNode(e)); } }; }, 127: (e, n, r) => { e.exports = `${r.p}75371f53f06181df75f1.ttf`; },
  }; const n = {}; function r(t) { const o = n[t]; if (void 0 !== o) return o.exports; const a = n[t] = { id: t, exports: {} }; return e[t](a, a.exports, r), a.exports; }r.n = (e) => { const n = e && e.__esModule ? () => e.default : () => e; return r.d(n, { a: n }), n; }, r.d = (e, n) => { for (const t in n)r.o(n, t) && !r.o(e, t) && Object.defineProperty(e, t, { enumerable: !0, get: n[t] }); }, r.o = (e, n) => Object.prototype.hasOwnProperty.call(e, n), r.p = '/', (() => { const e = r(379); const n = r.n(e); const t = r(795); const o = r.n(t); const a = r(569); const s = r.n(a); const c = r(565); const i = r.n(c); const l = r(216); const d = r.n(l); const u = r(589); const f = r.n(u); const p = r(890); const h = {}; h.styleTagTransform = f(), h.setAttributes = i(), h.insert = s().bind(null, 'head'), h.domAPI = o(), h.insertStyleElement = d(), n()(p.Z, h), p.Z && p.Z.locals && p.Z.locals; const m = document.getElementById('list'); const v = document.getElementById('form'); document.getElementById('refresh').addEventListener('click', (() => { (async () => { const e = await fetch('https://us-central1-js-capstone-backend.cloudfunctions.net/api/games/hxRTUPBG6Msl3ANs8jh1/scores/'); return await e.json(); })().then(((e) => { ((e) => { const n = ((e) => e.sort(((e, n) => n.score - e.score)))(e); m.innerHTML = '', n.forEach(((e) => { const n = document.createElement('li'); n.classList.add('font-bold'), n.innerHTML = `${e.user}: ${e.score}`, m.appendChild(n); })); })(e.result); })); })), v.addEventListener('submit', ((e) => { e.preventDefault(), (async () => { const e = document.getElementById('name').value; const n = document.getElementById('score').value; const r = await fetch('https://us-central1-js-capstone-backend.cloudfunctions.net/api/games/hxRTUPBG6Msl3ANs8jh1/scores/', { method: 'POST', body: JSON.stringify({ user: e, score: parseInt(n, 10) }), headers: { 'Content-type': 'application/json; charset=UTF-8' } }); console.log(await r.json()); })(), v.reset(); })); })();
})();